{"version":3,"sources":["webpack:///./src/templates/post-list.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"6SAmFaA,EAAS,YAyCPC,UAlHE,SAACC,GACd,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAASL,EAAME,KAAKI,KAAKC,aAAaF,OAFpB,EAGUL,EAAMQ,YAAhCC,EAHgB,EAGhBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALS,EAGHG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAenC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKE,MAAM,OAAOC,SAAU,CAAC,SAAD,2DAC5B,yBAAKC,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,kBACVjB,EAAMkB,KAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAC9B,kBAAC,OAAD,CACIQ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAEjD,2BAAOE,UAAU,qBAAoB,wCAAcE,EAAKE,KAAKC,YAAYM,OAEzE,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CACIJ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,gBAEV,2BAAOA,UAAU,uBAAjB,oBAEJ,yBAAKA,UAAU,WAxCvB,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACf7B,EAAO2B,SAAQ,SAACG,GACRF,IAAQE,EAAMF,KACdF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHT,EAgCsBU,CAAYpB,QAK7B,yBAAKH,UAAU,qBACTR,GACE,kBAAC,OAAD,CAAMgB,GAAIb,EAAU6B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,aAAhB,qBAGNP,GACE,kBAAC,OAAD,CAAMe,GAAIX,EAAU2B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,kBAAhB","file":"component---src-templates-post-list-js-57e4bd427a4658a64f95.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"../pages/index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst PostList = (props) => {\n    const posts = props.data.allMarkdownRemark.edges\n    const labels = props.data.site.siteMetadata.labels\n    const { currentPage, numPages } = props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-4 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                    {posts.map((post) => {\n                        const tags = post.node.frontmatter.tags\n                        return (\n                            <div key={post.node.id} className=\"container mt-5\">\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-dark\"\n                                >\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                                </Link>\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                                </small>\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-primary\"\n                                >\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\n                                </Link>\n                                <div className=\"d-block\">\n                                    {getTechTags(tags)}\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <div className=\"text-center mt-4\">\n                        {!isFirst && (\n                            <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark\">← Previous Page</span>\n                            </Link>\n                        )}\n                        {!isLast && (\n                            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark ml-5\">Next Page →</span>\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const listQuery = graphql`\n         query paginateQuery($skip: Int!, $limit: Int!) {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: $limit\n             skip: $skip\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default PostList\n"],"sourceRoot":""}